<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlt.onlineStudy.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.zlt.onlineStudy.po.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="chargingmode" jdbcType="VARCHAR" property="chargingmode" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="endtime" jdbcType="DATE" property="endtime" />
    <result column="img" jdbcType="VARCHAR" property="img" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, category_id, state, introduce, teacher, chargingmode, price, createtime, 
    endtime, img
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlt.onlineStudy.po.Course">
    insert into course (id, name, category_id, 
      state, introduce, teacher, 
      chargingmode, price, createtime, 
      endtime, img)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, 
      #{chargingmode,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{createtime,jdbcType=DATE}, 
      #{endtime,jdbcType=DATE}, #{img,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zlt.onlineStudy.po.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="chargingmode != null">
        chargingmode,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="img != null">
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="chargingmode != null">
        #{chargingmode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=DATE},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlt.onlineStudy.po.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="chargingmode != null">
        chargingmode = #{chargingmode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlt.onlineStudy.po.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      chargingmode = #{chargingmode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      createtime = #{createtime,jdbcType=DATE},
      endtime = #{endtime,jdbcType=DATE},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllCourse" resultMap="BaseResultMap">
    SELECT * FROM course where state!=0
  </select>
 <select id="findCourseByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select id, name, category_id, course.state, introduce, teacher, chargingmode, price, createtime,
    endtime, img from course ,user_course where user_course.user_id= #{id} and user_course.course_id = course.id and course.state = 0 and user_course.state=1
    </select>
  <select id="findCheckCourseByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select id, name, category_id, course.state, introduce, teacher, chargingmode, price, createtime,
    endtime, img from course ,user_course where user_course.user_id= #{id} and user_course.course_id = course.id and course.state = 2 and user_course.state =0
 </select>
  <select id="findOwnCourseByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select id, name, category_id, course.state, introduce, teacher, chargingmode, price, createtime,
    endtime, img from course ,user_course where user_course.user_id= #{id} and user_course.course_id = course.id and course.state = 0 and user_course.state =1
 </select>
  <select id="findCourseByLei" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select id, name, category_id, course.state, introduce, teacher, chargingmode, price, createtime,
    endtime, img from course  where category_id=#{categoryId,jdbcType=INTEGER}
 </select>
</mapper>